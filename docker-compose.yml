version: "3.8"

services:
  postgres:
    image: debezium/postgres:16-alpine
    container_name: postgres
    hostname: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    ports:
      - "5434:5432"
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./include/data:/docker-entrypoint-initdb.d/data 

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  clickhouse:
    image: clickhouse/clickhouse-server:23.3.13
    container_name: clickhouse-server
    hostname: clickhouse-server
    ports:
      - "8123:8123"
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    depends_on:
      - zookeeper
    volumes:
      - ./clickhouse/config.xml:/etc/clickhouse-server/config.xml
      - ./clickhouse/init.sql:/docker-entrypoint-initdb.d/init.sql

  postgres-airflow:
    image: postgres:13
    container_name: postgres-airflow
    hostname: postgres-airflow
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow_db
    ports:
      - "5432:5432"
    volumes:
      - ./mnt/postgres-airflow:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 30s
      timeout: 10s
      retries: 5

  airflow:
    build: ./airflow
    container_name: airflow
    hostname: airflow
    restart: always
    depends_on:
      - postgres-airflow
      - clickhouse
    volumes:
      - ./airflow/airflow.cfg:/opt/airflow/airflow.cfg
      - ./airflow/dags:/opt/airflow/dags
      - ./include:/opt/airflow/include
    ports:
      - "8080:8080"
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:airflow@postgres-airflow:5432/airflow_db"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 5

  minio:
    image: minio/minio
    container_name: minio
    hostname: minio
    ports:
      - "9001:9001"
      - "9000:9000"
    command: ["server", "/data", "--console-address", ":9001"]
    volumes:
      - ./mnt/minio/data:/data
    environment:
      MINIO_ROOT_USER: "minio"
      MINIO_ROOT_PASSWORD: "minio123"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9002/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
